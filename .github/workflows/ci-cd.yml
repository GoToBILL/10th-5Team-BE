name: CI/CD Pipeline

on:
  # main/develop으로 가는 PR에서는 빌드 테스트만
  pull_request:
    branches: [main, develop]

  # main/develop 브랜치에 푸시되면 빌드 + 배포
  push:
    branches: [main, develop]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean -x test build

      - name: Rename JAR for deployment
        run: cp build/libs/cherrydan-0.0.1-SNAPSHOT.jar app.jar

      # main 또는 develop 브랜치 푸시일 때만 배포
      - name: Deploy to EC2
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          echo "===== JAR 파일 EC2로 배포 중... ====="
          scp -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i private_key.pem \
            app.jar ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/
          
          ssh -o ConnectTimeout=10 -o BatchMode=yes -o StrictHostKeyChecking=no -i private_key.pem \
            ec2-user@${{ secrets.EC2_HOST }} << 'EOL'
          
            echo "===== 기존 애플리케이션 중지 ====="
            if pgrep -f "app.jar" > /dev/null; then
              echo "기존 애플리케이션을 중지합니다..."
              pkill -f "app.jar"
              sleep 3
          
              if pgrep -f "app.jar" > /dev/null; then
                echo "강제 종료합니다..."
                pkill -9 -f "app.jar"
                sleep 2
              fi
              echo "기존 애플리케이션이 중지되었습니다."
            else
              echo "실행 중인 애플리케이션이 없습니다."
            fi
          
            echo "===== 새 애플리케이션 시작 ====="
            nohup java -jar app.jar > app.log 2>&1 &
          
            sleep 5
          
            echo "===== 애플리케이션 상태 확인 ====="
            if pgrep -f "app.jar" > /dev/null; then
              echo "애플리케이션이 성공적으로 시작되었습니다."
              echo "프로세스 ID: $(pgrep -f 'app.jar')"
          
              # 포트 확인
              if ss -tlnp | grep :8080 > /dev/null 2>&1; then
                echo "포트 8080이 정상적으로 열려있습니다."
              else
                echo "포트 8080 확인 필요 (시작 중일 수 있음)"
              fi
          
              echo "=== 최근 로그 ====="
              tail -n 5 app.log
            else
              echo "애플리케이션 시작에 실패했습니다."
              echo "=== 에러 로그 ====="
              tail -n 10 app.log
              exit 1
            fi
          echo "===== 배포 완료 ====="  # 추가 필요
          EOL  # 이 부분이 누락됨!
  
          # 키 파일 삭제도 추가하는 게 좋음
          rm -f private_key.pem
          echo "🎉 배포가 성공적으로 완료되었습니다!"